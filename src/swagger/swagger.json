{
  "openapi": "3.0.0",
  "info": {
    "title": "API Rick and Morty",
    "description": "API de cadastro dos personagens da serie Rick and Morty",
    "contact": {
      "email": "victor-dev@outlook.com.br"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "API local"
    },
    {
      "url": "https://rickandmorty.herokuapp.com",
      "description": "API no Heroku"
    }
  ],
  "paths": {
    "/users/create": {
      "post": {
        "summary": "Criar um novo usuário",
        "description": "Rota responsável por criar um novo usuário",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "Users": {
                  "value": {
                    "name": "User test",
                    "username": "Test Dev",
                    "email": "test-dev@outlook.com.br",
                    "password": "12345",
                    "avatar": "https://avatars.githubusercontent.com/u/91481122?v=4"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Not Found"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Buscar todos os usuários",
        "description": "Rota responsável por buscar todos os usuários",
        "tags": ["Users"],
        "responses": {
          "400": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Entrar no Twitter",
        "description": "Rota responsável fazer o login de um user cadastrado",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "User": {
                  "value": {
                    "email": "test-dev@outlook.com.br",
                    "password": "12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/characters/create-characters": {
      "post": {
        "summary": "Criar um novo personagem",
        "description": "Rota responsável por criar um novo personagem",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Characters"
              },
              "examples": {
                "Character": {
                  "value": {
                    "nome": "Rick",
                    "imagem": "teste"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Not Found"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/Characters"
                }
              }
            }
          }
        }
      }
    },
    "/characters/all-characters": {
      "get": {
        "summary": "Buscar todos os personagens",
        "description": "Rota responsável por buscar todos os personagens",
        "tags": ["Characters"],
        "responses": {
          "400": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Characters"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/characters/find-characters/{id}": {
      "get": {
        "summary": "Busca uma personagem pelo ID",
        "description": "Rota responsável por buscar uma personagem pelo ID",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do personagem para a busca",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schemas": {
                  "type": "object",
                  "$ref": "#/components/schemas/Characters"
                }
              }
            }
          }
        }
      }
    },
    "/characters/update-characters/{id}": {
      "put": {
        "summary": "Editar um personagem pelo ID",
        "description": "Rota responsável por editar um persoangem pelo ID",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do personagem para a busca e edita-lo",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Characters"
              },
              "examples": {
                "Character": {
                  "value": {
                    "nome": "Rick Editado",
                    "imagem": "teste editado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Characters"
                }
              }
            }
          }
        }
      }
    },
    "/characters/delete-characters/{id}": {
      "delete": {
        "summary": "Apagar um personagem pelo ID",
        "description": "Rota responsável por apagar um personagem pelo ID",
        "tags": ["Characters"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do personagem para deleção",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "Characters": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "imagem": {
            "type": "string"
          }
        }
      }
    }
  }
}
